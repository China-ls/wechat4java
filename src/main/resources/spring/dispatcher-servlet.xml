<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans.xsd
	   http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       ">

    <!-- ******************************************************************** -->
    <!-- Spring 3.0 configuration -->
    <!-- ******************************************************************** -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter" >
                <property name="supportedMediaTypes" value="text/plain;charset=UTF-8" />
            </bean>
            <!--<bean class="com.ls.wechat.http.converter.Utf8StringHttpMessageConverter" />-->
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper" ref="objectMapper"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <bean id="objectMapper" class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
    </bean>


    <!-- Allows for mapping the DispatcherServlet to "/" by forwarding static resource requests to the container's default Servlet -->
    <mvc:default-servlet-handler/>

    <!-- ******************************************************************** -->
    <!-- Mark bean transactions as annotation driven -->
    <!-- ******************************************************************** -->
    <!--<tx:annotation-driven transaction-manager="transactionManager"/>-->

    <!-- ******************************************************************** -->
    <!-- Register Multi Part Resolve -->
    <!-- ******************************************************************** -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

    <!-- ******************************************************************** -->
    <!-- Bean Name View Resolver used to Redirect to Beans by id, required by Binary Content View -->
    <!-- ******************************************************************** -->
    <bean id="beanNameViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver"/>

    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/pages/"/>
    </bean>

    <!-- 对静态资源文件的访问  方案二 （二选一）-->
    <mvc:resources mapping="/img/**" location="/img/" cache-period="31556926"/>
    <mvc:resources mapping="/js/**" location="/js/" cache-period="31556926"/>
    <mvc:resources mapping="/css/**" location="/css/" cache-period="31556926"/>
    <mvc:resources mapping="/fonts/**" location="/fonts/" cache-period="31556926"/>
    <mvc:resources mapping="/lib/**" location="/lib/" cache-period="31556926"/>

    <mvc:cors>
        <mvc:mapping path="/**"
                     allowed-origins="*,*"
                     allowed-methods="GET,POST,PUT,DELETE,OPTIONS"
                     allowed-headers="APPKEY,Authorization,Content-Type,If-None-Match"
                     allow-credentials="false"
                     max-age="1800"/>
    </mvc:cors>

    <mvc:interceptors>
        <!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <!-- 需排除拦截的地址 -->
            <!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
            <bean class="com.ls.wechat.interceptor.MethodMonitorInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!--<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">-->
    <!--&lt;!&ndash; 定义默认的异常处理页面，当该异常类型的注册时使用 &ndash;&gt;-->
    <!--&lt;!&ndash;<property name="defaultErrorView" value="error"></property>&ndash;&gt;-->
    <!--&lt;!&ndash; 定义异常处理页面用来获取异常信息的变量名，默认名为exception &ndash;&gt;-->
    <!--&lt;!&ndash;<property name="exceptionAttribute" value="ex"></property>&ndash;&gt;-->
    <!--&lt;!&ndash; 定义需要特殊处理的异常，用类名或完全路径名作为key，异常也页名作为值 &ndash;&gt;-->
    <!--<property name="exceptionMappings">-->
    <!--<props>-->
    <!--<prop key="cn.basttg.core.exception.BusinessException">error-business</prop>-->
    <!--<prop key="cn.basttg.core.exception.ParameterException">error-parameter</prop>-->
    <!--&lt;!&ndash; 这里还可以继续扩展对不同异常类型的处理 &ndash;&gt;-->
    <!--</props>-->
    <!--</property>-->
    <!--</bean>-->

    <!-- ******************************************************************** -->
    <!-- Scan for web layer annotated beans -->
    <!-- ******************************************************************** -->
    <context:component-scan base-package="com.ls.wechat.controller" scoped-proxy="interfaces"/>

</beans>